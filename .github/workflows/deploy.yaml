name: Deploy application
on:
  workflow_dispatch:
  push:
    branches:
      - main
env:
  IMAGE_TAG: ${{ github.sha }}
  IMAGE: ghcr.io/${{ github.repository }}/amt-person-service
  PRINT_PAYLOAD: true

jobs:
  test-build-and-push:
    name: Test, build and push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Build artifacts
        run: ./gradlew build
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker image
        run: docker build -t ${IMAGE}:${IMAGE_TAG} .
      - name: Push Docker image
        run: docker push ${IMAGE}:${IMAGE_TAG}

  deploy-dev:
    name: Deploy application to dev
    needs: test-build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy application
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais-dev.yaml
          VAR: version=${{ env.IMAGE_TAG }}

  deploy-prod:
    name: Deploy application to prod
    needs: deploy-dev
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy application
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: .nais/nais-prod.yaml
          VAR: version=${{ env.IMAGE_TAG }}
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ env.IMAGE_TAG }}
          tag_name: release_${{ env.IMAGE_TAG }}
          prerelease: false